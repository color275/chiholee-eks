# eksctl로 cluster 만들기 
# eksctl create cluster --config-file=cluster.yaml


# eksctl scale nodegroup --cluster=ecommerce-eks --nodes=5 --name=ecommerce-ng-public-01 --nodes-min=2 --nodes-max=10
# eksctl scale nodegroup --cluster=ecommerce-eks --nodes=5 --name=ecommerce-ng-public-02 --nodes-min=2 --nodes-max=10

# eksctl scale nodegroup --cluster=ecommerce-eks --nodes=1 --name=ecommerce-ng-public-01 --nodes-min=1 --nodes-max=2
# eksctl scale nodegroup --cluster=ecommerce-eks --nodes=1 --name=ecommerce-ng-public-02 --nodes-min=1 --nodes-max=2

apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: ecommerce01
  region: ap-northeast-2
  version: "1.26"

vpc:
  subnets:
    public:
      ap-northeast-2a: {id: subnet-0aaf0c46a8c210228}
      ap-northeast-2b: {id: subnet-08a7bfd4ff6b4480e}
    private:
      ap-northeast-2a: {id: subnet-05fef71a68f0520a7}
      ap-northeast-2b: {id: subnet-033906e680ab0861e}

cloudWatch:
  clusterLogging:
    enableTypes: ["api", "audit", "authenticator", "controllerManager", "scheduler"]

managedNodeGroups:
- name: ecommerce-ng-public-01
  instanceType: m5.large
  desiredCapacity: 2
  volumeSize: 80
  labels:
    nodegroup-type: "ecommerce-ng-public-01"
  subnets:
  - subnet-0aaf0c46a8c210228
  - subnet-08a7bfd4ff6b4480e
  iam:
    attachPolicyARNs:
    withAddonPolicies:
      autoScaler: true
      cloudWatch: true
      ebs: true
      fsx: true
      efs: true
  ssh:
    publicKeyPath: ~/.ssh/id_rsa.pub
- name: ecommerce-ng-public-02
  instanceType: m5.large
  desiredCapacity: 2
  volumeSize: 80
  labels:
    nodegroup-type: "ecommerce-ng-public-02"
  subnets:
  - subnet-0aaf0c46a8c210228
  - subnet-08a7bfd4ff6b4480e
  iam:
    attachPolicyARNs:
    withAddonPolicies:
      autoScaler: true
      cloudWatch: true
      ebs: true
      fsx: true
      efs: true
  ssh:
    publicKeyPath: ~/.ssh/id_rsa.pub
